version: 0.2

phases:
  install:
    commands:
      - apt-get update
      - apt-get install zip
  pre_build:
    commands:
      - pip install pytest==3.6.3
      - pip install pyflakes==2.0.0
       ## CONFIGURE THIS: Repo name, please make sure this repo exists in ECR
      - export projectname=image-embedding
      - export IMAGE_REPO_BASE_NAME=image-embedding
      - export PYTORCH_VERSION=1.0.0
      # AWS cli version to login into ecr. This needs to be compatible with the version of boto3 in the requirements file
      - export awscli_version=1.16.35


  build:
    commands:
      # Run Tests
      - echo Building project $projectname
      - pip install -r source/requirements.txt
      - pip install -r tests/requirements.txt
      - pyflakes ./**/*.py
      - export PYTHONPATH=./src
      - pytest

      ## Tests passed, so build docker
      - echo Building the Docker image...
      - cd src

      ## TODO: Automate version tagging based on datetime for now, ideally should be tied to release tags
      - export LATEST_TAG=latest
      - export VERSION_TAG=$(date '+%Y%m%d%H%M')
      # Get AWS Account Id
      - export AWS_ACCOUNT_ID=$(echo $CODEBUILD_BUILD_ARN | cut -d':' -f 5)

       # fix awscli version so nothing breaks...
      - pip install awscli==$awscli_version
      - echo Logging in to Amazon ECR...

      # Build docker image for gpu
      - export DEVICE=gpu
      - export IMAGE_REPO_NAME=${IMAGE_REPO_BASE_NAME}-${DEVICE}-${PYTORCH_VERSION}
      - docker build -t $IMAGE_REPO_NAME:$LATEST_TAG .  --build-arg REGION=$AWS_DEFAULT_REGION  --build-arg DEVICE=$DEVICE
      - docker tag $IMAGE_REPO_NAME:$LATEST_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG
      - docker tag $IMAGE_REPO_NAME:$LATEST_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$VERSION_TAG
      # Push Docker Image
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$VERSION_TAG


      # Build docker image for cpu
      - export DEVICE=cpu
      - export IMAGE_REPO_NAME=${IMAGE_REPO_BASE_NAME}-${DEVICE}-${PYTORCH_VERSION}
      - docker build -t $IMAGE_REPO_NAME:$LATEST_TAG .  --build-arg REGION=$AWS_DEFAULT_REGION  --build-arg DEVICE=$DEVICE
      - docker tag $IMAGE_REPO_NAME:$LATEST_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG
      - docker tag $IMAGE_REPO_NAME:$LATEST_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$VERSION_TAG
      # Push Docker Image
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$LATEST_TAG
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$VERSION_TAG


      # Optionally copy source code to s3
      - mkdir $CODEBUILD_SRC_DIR/buildoutput
      - cd $CODEBUILD_SRC_DIR/src && zip -r ../buildoutput/source.zip .

artifacts:
  files:
    - '**/*'
  base-directory: buildoutput
  name: ${projectname}_$(date +%Y%m%d%H%M%S)_$CODEBUILD_SOURCE_VERSION